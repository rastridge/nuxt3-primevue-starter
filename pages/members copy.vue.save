<template>
	<div>
		<Common-header title="Membership" />
		<div class="card">
			<DataTable
				:globalFilterFields="['member_type']"
				v-model:filters="filters"
				:value="members"
				:class="'p-datatable-sm'"
				tableStyle="min-width: 50rem"
				dataKey="account_id"
				filterDisplay="row"
				paginator
				:rows="10"
				:rowsPerPageOptions="[5, 10, 20, 50]"
				paginatorTemplate="RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink"
				currentPageReportTemplate="{first} to {last} of {totalRecords}"
			>
				<template #empty> No members found. </template>
				<template #loading> Loading Membership data. Please wait. </template>
				<Column field="name" header="Name"></Column>
				<Column field="member_year" header="Year Joined" sortable></Column>
				<Column
					field="member_type"
					header="Member Type"
					:showFilterMenu="true"
					:filterMenuStyle="{ width: '10rem' }"
				>
					<!-- <template #body="{ data }">
				</template> -->
					<template #filter="{ filterModel, filterCallback }">
						<Dropdown
							v-model="filterModel.value"
							@change="filterCallback()"
							:options="member_types"
							placeholder="Select One"
							class="p-column-filter"
							style="min-width: 20rem"
							:showClear="true"
						>
							<!-- 							<template #option="slotProps">
							<Tag
								:value="slotProps.option"
								:severity="getSeverity(slotProps.option)"
							/>
						</template> -->
						</Dropdown>
					</template></Column
				>
			</DataTable>
		</div>
	</div>
</template>

<script setup>
	import { FilterMatchMode } from 'primevue/api'
	//
	// Get current news
	//
	const {
		data: members,
		pending,
		error,
		refresh,
	} = await useFetch('/accounts/getshow', {
		method: 'get',
		headers: {
			authorization: 'not-needed',
		},
	})
	//
	// filter value criteria
	//
	const filters = ref({
		member_type: { value: null, matchMode: FilterMatchMode.EQUALS },
	})

	const member_types = ref([
		'Alumni',
		'Pending',
		'Active',
		'Other',
		'Ad_Astra',
		'Development',
	])
	const loading = ref(true)
</script>
